1. Show the subject names of books supplied by *supplier2*.
SELECT sub.CategoryName 
FROM db_book book, db_supplier sup, db_subject sub 
WHERE sup.SupplierID = book.SupplierID 
AND sub.SubjectID = book.SubjectID 
AND sup.CompanyName = "supplier2"

2. Show the name and price of the most expensive book supplied by *supplier3*.
SELECT book.Title, book.UnitPrice 
FROM db_book book, db_supplier sup 
WHERE sup.CompanyName = "supplier3" 
AND book.SupplierID = sup.SupplierID
ORDER BY book.UnitPrice DESC 
LIMIT 1

3. Show the unique names of all books ordered by *lastname1 firstname1*.
SELECT book.Title 
FROM db_customer cus, db_orders ord, db_order_details ordet, db_book book 
WHERE cus.CustomerID = ord.CustomerID 
AND ord.OrderID = ordet.OrderID 
AND ordet.BookID = book.BookID 
AND cus.LastName = "lastname1" 
AND cus.FirstName = "firstname1" 
GROUP BY book.Title

4. Show the title of books which have more than 10 units in stock.
SELECT Title, Quantity 
FROM db_book 
WHERE Quantity > 10

5. Show the total price *lastname1 firstname1* has paid for the books.
SELECT SUM(book.UnitPrice * ordet.Quantity) AS "Total_Purchase_Cost"
FROM db_customer cus, db_orders ord, db_order_details ordet, db_book book  
WHERE cus.CustomerID = ord.CustomerID  
AND ord.OrderID = ordet.OrderID 
AND ordet.BookID = book.BookID  
AND cus.LastName = "lastname1"  
AND cus.FirstName = "firstname1"

6. Show the names of the customers who have paid less than $80 in totals.
SELECT CONCAT(cus.FirstName, " ", cus.LastName) AS "Customer_Name", SUM(book.UnitPrice * ordet.Quantity) AS "Total_Purchase_Cost"   
FROM db_customer cus, db_orders ord, db_order_details ordet, db_book book   
WHERE cus.CustomerID = ord.CustomerID   
AND ord.OrderID = ordet.OrderID   
AND ordet.BookID = book.BookID  
GROUP BY cus.FirstName, cus.LastName  
HAVING SUM(book.UnitPrice * ordet.Quantity) < 80

7. Show the name of books supplied by *supplier2*.
SELECT book.Title
FROM db_book book, db_supplier sup
WHERE sup.SupplierID = book.SupplierID
AND sup.CompanyName = "supplier2"

8. Show the total price each customer paid and their names.  List the
     result in descending price.
SELECT CONCAT(cus.FirstName, " ", cus.LastName) AS "Customer_Name", SUM(book.UnitPrice * ordet.Quantity) AS "Total_Purchase_Cost"   
FROM db_customer cus, db_orders ord, db_order_details ordet, db_book book   
WHERE cus.CustomerID = ord.CustomerID   
AND ord.OrderID = ordet.OrderID   
AND ordet.BookID = book.BookID  
GROUP BY cus.FirstName, cus.LastName
ORDER BY SUM(book.UnitPrice * ordet.Quantity) DESC

9. Show the names of all the books shipped on 08/04/2016 and their shippers' names.
SELECT book.Title, ship.ShpperName
FROM db_shipper ship, db_orders ord, db_order_details ordet, db_book book
WHERE ord.OrderID = ordet.OrderID
AND ship.ShipperID = ord.ShipperID
AND ordet.BookID = book.BookID
AND ord.ShippedDate = '2016/08/04'

10. Show the unique names of all the books *lastname1 firstname1* and
     *lastname4 firstname4* *both* ordered.
SELECT DISTINCT book.Title    
FROM db_customer cus, db_orders ord, db_order_details ordet, db_book book   
WHERE cus.CustomerID = ord.CustomerID   
AND ord.OrderID = ordet.OrderID  
AND ordet.BookID = book.BookID  
AND cus.LastName = "lastname1"  
AND book.Title IN (    
  SELECT book.Title      
  FROM db_customer cus, db_orders ord, db_order_details ordet, db_book book     
  WHERE cus.CustomerID = ord.CustomerID     
  AND ord.OrderID = ordet.OrderID    
  AND ordet.BookID = book.BookID    
  AND cus.LastName = "lastname4"  
)

11. Show the names of all the books *lastname6 firstname6* was
     responsible for.
SELECT DISTINCT book.Title    
FROM db_customer cus, db_orders ord, db_order_details ordet, db_book book   
WHERE cus.CustomerID = ord.CustomerID   
AND ord.OrderID = ordet.OrderID  
AND ordet.BookID = book.BookID  
AND cus.LastName = "lastname6"

12. Show the names of all the ordered books and their total
     quantities.  List the result in ascending quantity.
SELECT Title, SUM(ordet.Quantity) AS "Total_Orders"
FROM db_order_details ordet, db_book book 
WHERE book.BookID = ordet.BookID 
GROUP BY Title
ORDER BY SUM(ordet.Quantity) ASC

13. Show the names of the customers who ordered at least 2 books.
SELECT Name
FROM (
  SELECT CONCAT(cus.LastName, " ", cus.FirstName) AS Name, ordet.Quantity AS Quantity     
  FROM db_customer cus, db_orders ord, db_order_details ordet     
  WHERE cus.CustomerID = ord.CustomerID     
  AND ord.OrderID = ordet.OrderID
) A
GROUP BY Name
HAVING SUM(Quantity) > 2

14. Show the name of the customers who have ordered at least a book in
     *category3* or *category4* and the book names.
SELECT DISTINCT CONCAT(cus.FirstName, " ", cus.LastName)   
FROM db_customer cus, db_orders ord, db_order_details ordet, db_book book, db_subject sub
WHERE cus.CustomerID = ord.CustomerID   
AND ord.OrderID = ordet.OrderID  
AND ordet.BookID = book.BookID
AND sub.SubjectID = book.SubjectID
AND book.SubjectID IN (
  SELECT SubjectID 
  FROM db_subject 
  WHERE CategoryName IN ("category3", "category4")
)

15. Show the name of the customer who has ordered at least one book
     written by *author1*.
SELECT DISTINCT CONCAT(cus.FirstName, " ", cus.LastName)   
FROM db_customer cus, db_orders ord, db_order_details ordet, db_book book
WHERE cus.CustomerID = ord.CustomerID   
AND ord.OrderID = ordet.OrderID  
AND ordet.BookID = book.BookID
AND book.Author = "author1"

16. Show the name and total sale (price of orders) of each employee.
Select CONCAT(emp.LastName, " ", emp.FirstName) AS "Employee_Name", SUM(ordet.Quantity * book.UnitPrice) AS "Total_Sales"
FROM db_employee emp, db_orders ord, db_order_details ordet, db_book book
WHERE emp.EmployeeID = ord.EmployeeID
AND ord.OrderID = ordet.OrderID
AND ordet.BookID = book.BookID
GROUP BY emp.LastName, emp.FirstName

17. Show the book names and their respective quantities for open orders (the orders which have not been shipped) at midnight 08/04/2016.
SELECT * 
FROM db_orders ord 
WHERE ord.OrderDate <= '2016/08/04' 
AND ord.ShippedDate IS NULL

18. Show the names of customers who have ordered more than 1 book and the corresponding quantities.  List the result in the descending quantity.
SELECT CONCAT(cus.FirstName, " ", cus.LastName), ordet.BookID, SUM(ordet.Quantity) AS "Order_Quantity"
FROM db_customer cus, db_orders ord, db_order_details ordet
WHERE cus.CustomerID = ord.CustomerID   
AND ord.OrderID = ordet.OrderID
AND cus.CustomerID IN (
	SELECT cus.CustomerID
	FROM db_customer cus, db_orders ord, db_order_details ordet
	WHERE cus.CustomerID = ord.CustomerID   
	AND ord.OrderID = ordet.OrderID
	GROUP BY cus.FirstName, cus.LastName
	HAVING COUNT(DISTINCT ordet.BookID) > 1
)
GROUP BY cus.FirstName, cus.LastName, ordet.BookID
ORDER BY cus.FirstName, cus.LastName, SUM(ordet.Quantity) DESC

19. Show the names of customers who have ordered more than 3 books and
     their respective telephone numbers.
SELECT Name, Phone
FROM (
  SELECT CONCAT(cus.LastName, " ", cus.FirstName) AS Name, cus.Phone AS Phone, ordet.Quantity AS Quantity     
  FROM db_customer cus, db_orders ord, db_order_details ordet     
  WHERE cus.CustomerID = ord.CustomerID     
  AND ord.OrderID = ordet.OrderID
) A
GROUP BY Name
HAVING SUM(Quantity) > 3